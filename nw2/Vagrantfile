# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
:inetrouter => {
        :box_name => "centos/7",
        #:public => {:ip => '10.10.10.1', :adapter => 1},
        :box_version => "2004.01",
        :hostname => "inetrouter",
        :ssh_port => 2001,
        :os_type => "centos",
        :ram => 1024,
        :cpu => 2,
        :net => [
                   {ip: '192.168.255.1', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                ]
  },
  :centralrouter => {
        :box_name => "centos/7",
        :box_version => "2004.01",
        :os_type => "centos",
        :hostname => "centralrouter",
        :ssh_port => 2002,
        :ram => 1024,
        :cpu => 2,
        :net => [
                   {ip: '192.168.255.2', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                   {ip: '192.168.0.1', adapter: 3, netmask: "255.255.255.240", virtualbox__intnet: "directors"},
                   {ip: '192.168.0.32', adapter: 4, netmask: "255.255.255.240", virtualbox__intnet: "office-hw-1"},
                   {ip: '192.168.0.64', adapter: 5, netmask: "255.255.255.192", virtualbox__intnet: "office-hw-2"},
                   {ip: '192.168.255.5', adapter: 6, netmask: "255.255.255.252", virtualbox__intnet: "office2router"},
                   {ip: '192.168.255.9', adapter: 7, netmask: "255.255.255.252", virtualbox__intnet: "office1router"},
                ]
  },
  
  :centralserver => {
        :box_name => "centos/7",
        :box_version => "2004.01",
        :os_type => "centos",
        :hostname => "centralserver",
        :ssh_port => 2003,
        :ram => 1024,
        :cpu => 2,
        :net => [
                   {ip: '192.168.0.2', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "directors"},
                   #{adapter: 3, auto_config: false, virtualbox__intnet: true},
                   #{adapter: 4, auto_config: false, virtualbox__intnet: true},
                ]
  },
  :office2router => {
        :box_name => "debian/bullseye64",
        :hostname => "office2router",
        :os_type => "debian",
        :ssh_port => 2012,
        :ram => 1024,
        :cpu => 2,
        :net => [
                   {ip: '192.168.255.6', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "office2router"},
                   {ip: '192.168.1.1', adapter: 3, netmask: "255.255.255.128", virtualbox__intnet: "dev2"},
                   {ip: '192.168.1.129', adapter: 4, netmask: "255.255.255.192", virtualbox__intnet: "test-servers2"},
                   {ip: '192.168.1.193', adapter: 5, netmask: "255.255.255.192", virtualbox__intnet: "office-hardware2"},
                ]
  },

  :office1router => {
        #:box_name => "ubuntu/trusty64",
        :box_name => "ubuntu/focal64",
        #:box_version => "20190514.0.0",
        :os_type => "ubuntu",
        :hostname => "office1router",
        :ssh_port => 2010,
        :ram => 1024,
        :cpu => 2,
        :net => [
                   {ip: '192.168.255.10', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "office1router"},
                   {ip: '192.168.2.1', adapter: 3, netmask: "255.255.255.192", virtualbox__intnet: "dev1"},
                   {ip: '192.168.2.65', adapter: 4, netmask: "255.255.255.240", virtualbox__intnet: "test-servers1"},
                   {ip: '192.168.2.129', adapter: 5, netmask: "255.255.255.192", virtualbox__intnet: "managers1"},
                   {ip: '192.168.2.192', adapter: 6, netmask: "255.255.255.193", virtualbox__intnet: "office-hardware1"},
                ]
  },
:office1server => {
        #:box_name => "ubuntu/trusty64",
        #:box_version => "20190514.0.0",
        :box_name => "ubuntu/focal64",
        :hostname => "office1server",
        :ssh_port => 2011,
        :os_type => "ubuntu",
        :ram => 1024,
        :cpu => 2,
        :net => [
                   {ip: '192.168.2.130', adapter: 2, netmask: "255.255.255.192", virtualbox__intnet: "managers1"},
                ]
  },
 :office2server => {
        #:box_name => "ubuntu/trusty64",
        #:box_version => "20190514.0.0",
        :box_name => "debian/bullseye64",
        :hostname => "office2server",
        :ssh_port => 2013,
        :os_type => "debian",
        :ram => 1024,
        :cpu => 2,
        :net => [
                   {ip: '192.168.1.2', adapter: 2, netmask: "255.255.255.128", virtualbox__intnet: "dev2"},
                ]
  },



}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.box_version = boxconfig[:box_version]
        box.vm.hostname = boxconfig[:hostname]
        box.vbguest.auto_update = false
        box.ssh.keys_only = true
        box.ssh.insert_key = true
        box.vm.network :forwarded_port,host:boxconfig[:ssh_port], guest:22,id:'ssh'
        box.vm.provider "virtualbox" do |vb_machine_settings|
                vb_machine_settings.customize ["modifyvm", :id, "--memory", boxconfig[:ram]]
                vb_machine_settings.customize ["modifyvm", :id, "--cpus", boxconfig[:cpu]]
            end

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

#               
        
                case boxconfig[:os_type]
        when "centos" 
          box.vm.provision "shell", inline: <<-SHELL
                   yum update
                   yum install epel-release centos-release-scl iptables iptables-services -y
          SHELL
        box.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "/home/vagrant/.ssh/id_rsa.pub"
        box.vm.provision :shell, :inline => "cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys"
        box.vm.provision :shell, :inline => "systemctl enable sshd"
        box.vm.provision :shell, :inline => "systemctl start sshd"
        box.vm.provision "shell", inline: <<-SHELL
                mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL
        

        when "ubuntu"
          box.vm.provision "shell", inline: <<-SHELL
                   apt update -y
                   apt install net-tools python-minimal sshpass -y
                   ssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa <<< y
          SHELL

        when "debian"
          box.vm.provision "shell", inline: <<-SHELL
                   apt update -y
                   apt install net-tools python-minimal sshpass -y
                   ssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa <<< y
         SHELL


        box.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "/home/vagrant/.ssh/id_rsa.pub"
        box.vm.provision :shell, :inline => "cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys"
        box.vm.provision :shell, :inline => "sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config", run: "always"

        box.vm.provision :shell, :inline => "service ssh restart"
         end
#        box.vm.provision :shell, :inline => "sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-Linux-*"
 #       box.vm.provision :shell, :inline => "sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-Linux-*"
  #      box.vm.provision :shell, :inline => "dnf install centos-release-stream -y"
    
   
        case boxname.to_s
        when "inetrouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            systemctl stop firewalld
            systemctl disable firewalld
            sysctl net.ipv4.conf.all.forwarding=1
            iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
            #ip r add 192.168.255.4/30 via 192.168.255.2 # office 2 net !!!!
            #ip r add 192.168.255.7/30 via 192.168.255.2 # office 1 net !!!!
            SHELL
        when "centralrouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            sysctl net.ipv4.conf.all.forwarding=1
            #echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0  #disabling inet
            #echo "GATEWAY=192.168.255.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            #ip r del default
            #ip route add 0.0.0.0/0 via 192.168.255.1
            #--------------------
            #ethoffice1=$(ip route list 192.168.255.9/30 | awk '{print $3}')
            #echo "=====$ethoffice1======"
            #ifconfig $ethoffice1 192.168.255.9 netmask 255.255.255.252
            #---------------------
            systemctl restart network
            SHELL
        when "centralserver"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            #echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
            #echo "GATEWAY=192.168.0.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            #ip r del default
            #ip route add 0.0.0.0/0 via 192.168.0.1 # all!
            #systemctl restart network
            SHELL
        when "office2router"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            ip r del default
            ip r add default via 192.168.255.5 dev eth1
            SHELL
        when "office1router"
          box.vm.provision "shell", run: "always", inline: <<-SHELL

            #ip route add 192.168.255.8/30 via 192.168.255.9
            #sysctl net.ipv4.conf.all.forwarding=1
            SHELL
        when "office1server"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            sysctl net.ipv4.conf.all.forwarding=1
            #echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
            #echo "GATEWAY=192.168.2.129" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            #ip r del default
            #ip route add 0.0.0.0/0 via 192.168.2.129
            #ip route add 192.168.2.128/26 via 192.168.255.9 # added 128 via 129
            #systemctl restart network
            SHELL
 
        end
      box.vm.provision "ansible", run: "always" do |ansible|
          ansible.playbook = "vm_config.yml"
        end

        case boxname.to_s
        when "office2server"
          box.vm.provision "shell", inline: <<-SHELL
            ip r del default
            ip r add default via 192.168.1.1 dev eth1
            SHELL
         end

        

      end

  end
  
  
end
