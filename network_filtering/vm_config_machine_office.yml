---
- name: main_playbook
  hosts: all 
  gather_facts: true
  become: true
  vars:
    test_version: 1
    installed_soft: ['git','mc','tcpdump','net-tools','nmap','nftables','bash-completion','most','zsh','iptables-persistent','knockd']
    host_related: "10.10.10.2"
    os_env:
      - key: EDITOR
        value: vi
      - key: TERM
        value: xterm
    desired_interface_name: ""

  tasks:
  - name: installing soft
    ansible.builtin.package:
      name:
        - "{{ item }}"
      state: present
    loop: "{{ installed_soft  }}"
  - name: installing soft main
    ansible.builtin.package:
      name: net-tools
      state: present
##########--------------------enabling services--------------------------############
  - name: setting forwarding enable 
    ansible.posix.sysctl:
      name: net.ipv4.conf.all.forwarding
      value: '1'
      state: present
#------------------------------------------------#

  - name: parse interface to route
    set_fact:
      desired_interface_name="{{ item }}"
    when: hostvars[inventory_hostname]['ansible_{{item}}']['ipv4']['address'] == "{{ ip_main }}"
    with_items:
      - "{{ ansible_interfaces }}"
  - name: print default interface
    debug:
      var: desired_interface_name
#  - name: patching gaweway ubuntu office
#    ansible.builtin.template:
#      src: ./settings/interfaces_ubuntu_office.j2
#      dest: /etc/network/interfaces
#        mode: 744
#------------------------------------------------#
  - name: Allow related and established connections
    ansible.builtin.iptables:
      chain: INPUT
      match: conntrack
      ctstate: ESTABLISHED,RELATED,NEW
      jump: ACCEPT
    become: yes
  - name: open ssh
    ansible.builtin.iptables:
      chain: INPUT
      protocol: tcp
      ctstate: NEW
      match: conntrack
      destination_port: 22
      jump: ACCEPT
      comment: allow ssh
    become: yes
    run_once: true
  - name: enable loopback
    ansible.builtin.iptables:
      chain: INPUT
      in_interface: lo
      jump: ACCEPT
      comment: enable loopback
    become: yes
    run_once: true
  - name: Allow related connections host1
    ansible.builtin.iptables:
      chain: INPUT
      action: insert
      source: "{{ host_related }}"
      jump: ACCEPT
    become: yes
    run_once: true
      #  - name: Allow related connections host1
      #ansible.builtin.iptables:
      #chain: INPUT
      #action: insert
      #source: "{{ host_related1 }}"
      #jump: ACCEPT
      #become: yes
      #run_once: true
  - name: Allow related connections host2
    ansible.builtin.iptables:
      chain: INPUT
      action: insert
      source: "{{ host_related2 }}"
      jump: ACCEPT
    become: yes
    run_once: true
  - name: Set the policy for the INPUT chain to DROP
    ansible.builtin.iptables:
      chain: INPUT
      policy: DROP
    run_once: true
 
#------------------------------------------------#
  - name: insert route office1router
    ansible.builtin.blockinfile:
      dest: /etc/netplan/50-vagrant.yaml
      insertafter: "{{ ip_main }}"
      block: |6
                  dhcp4: yes
                  dhcp4-overrides:
                      use-routes: false
                  gateway4: "{{ gateway_def }}"
  - name: append pager root
    ansible.builtin.lineinfile:
      dest: /root/.bashrc
      line: 'export PAGER="most"'
    run_once: true
#-------------------------------------------#
  - name: copy git zsh
    ansible.builtin.git:
      repo: https://github.com/blackden/zshrc.git
      dest: /root/zshrc
      clone: yes  
    run_once: true
  - name: Copy file with owner and permissions
    ansible.builtin.copy:
      src: "{{ item.0 }}"
      dest: "{{ item.1 }}"
      remote_src: yes
      owner: root
      group: root
      mode: '0744'
    with_together:
      - ['/root/zshrc/zshrc','/root/zshrc/zshrc.pre']
      - ['/root/.zshrc','/root/.zshrc.pre']
    run_once: true
  - name: copy zsh settings
    ansible.builtin.copy:
      src: "{{ item }}"
      dest: "/home/vagrant/"
      owner: root
      remote_src: yes
      group: vagrant
      mode: '0764'
    loop:
      - /root/.zshrc
      - /root/.zshrc.pre
    run_once: true
  - name: change shell for root
    ansible.builtin.shell: usermod -s /bin/zsh root
    run_once: true
  - name: change shell for user
    ansible.builtin.shell: usermod -s /usr/bin/zsh vagrant
    run_once: true
  - name: add sshd port 22
    ansible.builtin.lineinfile:
      path: "/etc/ssh/sshd_config"
      regex: "^#Port 22"
      line: "Port 22"
      state: present
    run_once: true
  - name: add sshd port 666
    ansible.builtin.lineinfile:
      path: "/etc/ssh/sshd_config"
      insertafter: "^Port 22"
      line: "Port 666"
      state: present
    notify: restart_sshd
    run_once: true
  - name: fix ssh settings
    ansible.builtin.lineinfile:
      path: "/etc/ssh/sshd_config"
      regex: "^PasswordAuthentication no"
      line: "PasswordAuthentication yes"
      insertafter: EOF
      state: present
    notify: restart_sshd
    run_once: true
  - name: customize /etc/environment
    ansible.builtin.lineinfile:
      dest: "/etc/environment"
      state: present
      regexp: "^{{ item.key }}="
      line: "{{ item.key }}={{ item.value }}"
    with_items: "{{ os_env }}"  
  - name: setting knockd 1
    ansible.builtin.lineinfile:
      path: /etc/default/knockd
      regexp: '^START_KNOCKD='
      line: START_KNOCKD=1
  - name: setting knockd input interface
    ansible.builtin.lineinfile:
      path: /etc/default/knockd
      regexp: '^#KNOCKD=_OPTS='
      line: KNOCKD_OPTS="-i "{{ desired_interface_name }}""
  - name: setting knockd service settings-rule
    ansible.builtin.template:
      src: ./settings/knockd_settings.j2
      dest: /etc/knockd.conf
      force: yes
      mode: 0644
      backup: yes
  - name: enable iptables-persistent service
    ansible.builtin.systemd:
      name: netfilter-persistent.service
      state: started
      enabled: yes
  - name: save iptables settings
    ansible.builtin.shell: netfilter-persistent save
    run_once: true
  - name: enable knockd service 
    ansible.builtin.systemd:
      name: knockd
      state: started
      enabled: yes
  - name: apply netplan
    ansible.builtin.command: netplan apply
  - name: restart network
    ansible.builtin.shell: systemctl restart systemd-networkd
  - name: restart sshd
    ansible.builtin.shell: systemctl restart sshd


  handlers:
    - name: restart_crond
      service:
        name=crond
        state=restarted
    - name: restart_send_mail
      service:
        name=sendmail
        state=restarted
    - name: restart_sshd
      service:
        name=sshd
        state=restarted
    - name: restart_network
      service:
        name=network
        state=restarted

